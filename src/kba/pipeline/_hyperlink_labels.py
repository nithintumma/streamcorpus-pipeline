#!/usr/bin/env python
'''
Pipeline stage for extracting hyperlinks to particular domains as
labels generated by the author.

This software is released under an MIT/X11 open source license.

Copyright 2012 Diffeo, Inc.
'''
import lxml.html
from streamcorpus import Offset, Label, Annotator
from xml.etree.ElementTree import XMLParser, TreeBuilder

class MyTreeBuilder(TreeBuilder):

    def start(self, tag, attrs):
        print("&lt;%s>" % tag)
        return TreeBuilder.start(self, tag, attrs)

    def data(self, data):
        print(repr(data))
        TreeBuilder.data(self, data)

    def end(self, tag):
        return TreeBuilder.end(self, tag)

def hyperlinks(clean_html):
    '''
    Generate tuple(label, anchor_offset) instances from clean_html
    '''
    # ElementTree.fromstring()
    parser = XMLParser(target=MyTreeBuilder())
    parser.feed(clean_html)
    root = parser.close() # return an ordinary Element


def make_hyperlink_labels(clean_html):
    '''
    Finds hyperlinks in clean_html and generate a
    streamcorpus.LabelSet treating the author as the Annotator
    '''

    pass

def hyperlink_labels(stream_item):
    return stream_item

if __name__ == '__main__':
    hyperlinks('')
