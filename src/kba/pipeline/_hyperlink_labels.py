#!/usr/bin/env python
'''
Pipeline stages for converting raw text into clean_html and extracting
hyperlinks to particular domains as labels generated by the author.

This software is released under an MIT/X11 open source license.

Copyright 2012 Diffeo, Inc.
'''

import os
import traceback
import streamcorpus
from clean_html import make_clean_html
from strip_tags import strip_tags

def cleanse_chunk(i_path):
    assert i_path[-3:] == '.sc', repr(i_path[-3:])
    o_path = i_path[-3:] + '-cleansed.sc'
    o_chunk = streamcorpus.Chunk(o_path, mode='wb')
    num_created = 0
    for si in streamcorpus.Chunk(i_path):
        #print '-----raw-----'
        #print si.body.raw
        #print '-----clean_html-----'
        if si.body and si.body.raw:
            try:
                clean_html = make_clean_html(si.body.raw)
            except Exception, exc:
                print '%s\n\non %s which starts %r' % (
                    traceback.format_exc(exc), si.abs_url, si.body.raw[:100])
            else:
                #print clean_html
                #print '-----clean_visible----'
                clean_visible = strip_tags(clean_html)
                #print clean_visible
                si.body.clean_html = clean_html
                si.body.clean_visible = clean_visible
                num_created += 1
        ## always put the StreamItem into the output chunk
        o_chunk.add(si)
    ## done
    o_chunk.close()
    print '%d clean_visible created' % num_created

if __name__ == '__main__':
    import argparse
    parser = argparse.ArgumentParser()
    parser.add_argument('input')
    args = parser.parse_args()

    if args.input == '-':
        import sys
        for path in sys.stdin:
            cleanse_chunk(path.strip())

    else:
        cleanse_chunk(args.input)
